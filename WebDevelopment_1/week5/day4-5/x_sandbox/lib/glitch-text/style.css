@import url("https://fonts.googleapis.com/css?family=Montserrat:100");
#app {
  background: #0a0a0a;
  height: 100vh;
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(rgba(10, 10, 10, 0.6), rgba(0, 0, 0, 0.9)), repeating-linear-gradient(0, transparent, transparent 2px, black 3px, black 3px), url("https://images.unsplash.com/photo-1506399558188-acca6f8cbf41?ixlib=rb-0.3.5&q=85&fm=jpg&crop=entropy&cs=srgb&ixid=eyJhcHBfaWQiOjE0NTg5fQ&s=7118759521e3184778a3b5e010e202c6");
  background-size: cover;
  background-position: center;
  z-index: 1;
}

#wrapper {
  text-align: center;
}

.sub {
  color: #64dcdc;
  letter-spacing: 1em;
}

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch-text {
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch-text::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(42px, 9999px, 8px, 0);
    transform: skew(0.29deg);
  }
  5% {
    clip: rect(21px, 9999px, 14px, 0);
    transform: skew(0.52deg);
  }
  10% {
    clip: rect(29px, 9999px, 3px, 0);
    transform: skew(0.66deg);
  }
  15% {
    clip: rect(59px, 9999px, 68px, 0);
    transform: skew(0.85deg);
  }
  20% {
    clip: rect(5px, 9999px, 22px, 0);
    transform: skew(0.8deg);
  }
  25% {
    clip: rect(77px, 9999px, 91px, 0);
    transform: skew(0.74deg);
  }
  30% {
    clip: rect(78px, 9999px, 58px, 0);
    transform: skew(0.13deg);
  }
  35% {
    clip: rect(21px, 9999px, 44px, 0);
    transform: skew(0.79deg);
  }
  40% {
    clip: rect(66px, 9999px, 39px, 0);
    transform: skew(0.68deg);
  }
  45% {
    clip: rect(13px, 9999px, 29px, 0);
    transform: skew(0.81deg);
  }
  50% {
    clip: rect(18px, 9999px, 91px, 0);
    transform: skew(1deg);
  }
  55% {
    clip: rect(48px, 9999px, 33px, 0);
    transform: skew(0.85deg);
  }
  60% {
    clip: rect(30px, 9999px, 33px, 0);
    transform: skew(0.93deg);
  }
  65% {
    clip: rect(57px, 9999px, 42px, 0);
    transform: skew(0.22deg);
  }
  70% {
    clip: rect(86px, 9999px, 71px, 0);
    transform: skew(0.64deg);
  }
  75% {
    clip: rect(36px, 9999px, 66px, 0);
    transform: skew(0.67deg);
  }
  80% {
    clip: rect(10px, 9999px, 20px, 0);
    transform: skew(0.61deg);
  }
  85% {
    clip: rect(22px, 9999px, 78px, 0);
    transform: skew(0.68deg);
  }
  90% {
    clip: rect(18px, 9999px, 54px, 0);
    transform: skew(0.06deg);
  }
  95% {
    clip: rect(58px, 9999px, 45px, 0);
    transform: skew(0.72deg);
  }
  100% {
    clip: rect(88px, 9999px, 92px, 0);
    transform: skew(0.19deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(47px, 9999px, 75px, 0);
    transform: skew(0.7deg);
  }
  5% {
    clip: rect(41px, 9999px, 67px, 0);
    transform: skew(0.52deg);
  }
  10% {
    clip: rect(67px, 9999px, 70px, 0);
    transform: skew(0.44deg);
  }
  15% {
    clip: rect(39px, 9999px, 3px, 0);
    transform: skew(0.08deg);
  }
  20% {
    clip: rect(60px, 9999px, 78px, 0);
    transform: skew(0.59deg);
  }
  25% {
    clip: rect(85px, 9999px, 14px, 0);
    transform: skew(0.26deg);
  }
  30% {
    clip: rect(99px, 9999px, 40px, 0);
    transform: skew(0.91deg);
  }
  35% {
    clip: rect(1px, 9999px, 72px, 0);
    transform: skew(0.4deg);
  }
  40% {
    clip: rect(32px, 9999px, 13px, 0);
    transform: skew(0.02deg);
  }
  45% {
    clip: rect(15px, 9999px, 100px, 0);
    transform: skew(0.41deg);
  }
  50% {
    clip: rect(44px, 9999px, 40px, 0);
    transform: skew(0.94deg);
  }
  55% {
    clip: rect(92px, 9999px, 74px, 0);
    transform: skew(0.26deg);
  }
  60% {
    clip: rect(17px, 9999px, 98px, 0);
    transform: skew(0.75deg);
  }
  65% {
    clip: rect(99px, 9999px, 64px, 0);
    transform: skew(0.69deg);
  }
  70% {
    clip: rect(42px, 9999px, 63px, 0);
    transform: skew(0.74deg);
  }
  75% {
    clip: rect(26px, 9999px, 100px, 0);
    transform: skew(0.23deg);
  }
  80% {
    clip: rect(37px, 9999px, 11px, 0);
    transform: skew(0.32deg);
  }
  85% {
    clip: rect(68px, 9999px, 58px, 0);
    transform: skew(0.55deg);
  }
  90% {
    clip: rect(87px, 9999px, 97px, 0);
    transform: skew(0.23deg);
  }
  95% {
    clip: rect(21px, 9999px, 96px, 0);
    transform: skew(0.65deg);
  }
  100% {
    clip: rect(97px, 9999px, 39px, 0);
    transform: skew(0.88deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(2deg);
  }
  10% {
    transform: skew(-4deg);
  }
  20% {
    transform: skew(4deg);
  }
  30% {
    transform: skew(5deg);
  }
  40% {
    transform: skew(0deg);
  }
  50% {
    transform: skew(0deg);
  }
  60% {
    transform: skew(-3deg);
  }
  70% {
    transform: skew(0deg);
  }
  80% {
    transform: skew(2deg);
  }
  90% {
    transform: skew(-4deg);
  }
  100% {
    transform: skew(5deg);
  }
}

/*# sourceMappingURL=style.css.map */
